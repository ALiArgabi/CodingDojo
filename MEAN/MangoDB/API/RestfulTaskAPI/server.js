// Restful Task API
// CRUD operations for 'tasks'.

/*
1- GET: Retrieve all Tasks
2- GET: Retrieve a Task by ID
3- POST: Create a Task
4- PUT: Update a Task by ID
5- DELETE: Delete a Task by ID
-----
id: (string) (default id generated by mongoDB)
title: (string)
description: (string, default to empty string)
completed: (boolean, default to: false)
created_at: (date, default to current date)
updated_at: (date, default to current date)

*/

const express = require("express");
const mongoose = require('mongoose');
const app = express();

const bodyParser = require('body-parser'); // var
app.use(bodyParser.urlencoded({ extended: true }));
app.use(bodyParser.json());
app.use(express.json());

const server = app.listen(8000 ,() => console.log('server on port 8000'));

// mongoose.Promise = global.Promise; //بحثت عنها طلعت شي قديم المفروض ماتستخدمه فيه mongoose 5

//MangoDB
mongoose.connect('mongodb://localhost/RestfulTaskAPI_DB', {
useUnifiedTopology: true,
useNewUrlParser: true,
});

//the Schema
const TaskSchema = new mongoose.Schema({
    //_id generated by mongoDB
    title: {type: String},
    description: {type: String, default:''}, //description: (string, default to empty string)
    completed: {type: Boolean, default:false}},// (boolean, default to: false)
    {timestamps: true}); //created_at //updated_at

   const theTask = mongoose.model('theTask', TaskSchema);

//-------------------------------------------------


//Routing

// 1- GET: Retrieve all Tasks
app.get('/', (req, res) => {
    theTask.find()
        .then(tasks => res.json({tasks:tasks}))
        .catch(err => res.json(err));
});

// 2- GET: Retrieve a Task by ID
app.get('/:id/', (req, res)  => {
    var id = req.params.id
    theTask.find({_id : id})
    .then(data => {res.json({data: data})})
    .catch(err => res.json(err));
});

//3- POST: Create a Task 
app.post('/new', (req, res) => {
    var task = new theTask({ title: req.body.title, description: req.body.description, completed: req.body.completed });
    
    task.save() 
        .then(task => {
            console.log('task created successfully', task)
            res.json({task: task})
        })
        .catch(err => res.json(err))
       
    });


//4- PUT: Update a Task by ID
app.put('/update/:id/',(req, res, t, d) => {
    theTask.updateOne({_id : req.params.id}, {title: t,description: d})
            .then(data => {res.json({data: data})})
            .catch(err => {
                console.log("We have an error!", err);
                for (var key in err.errors)
                {
                    req.flash('registration', err.errors[key].message);
                }
                res.json(err);
            });
});

//5- DELETE: Delete a Task by ID
app.delete('/remove/:id/', (req, res) => {
    theTask.findOneAndDelete({id : req.params._id})
    .then(data => {
        console.log('task deleted:')
        res.json({data: data})
    })
    .catch(err => { res.json(err)});
});
